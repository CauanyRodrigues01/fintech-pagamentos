spring.application.name=pagamentos

# Conex\u00E3o com o PostgreSQL
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://db:5432/pagamentosdb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:root}
spring.datasource.driver-class-name=org.postgresql.Driver

# Dialeto do JPA
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Mostrar as queries no console
spring.jpa.show-sql=true

# Verifica se as tabelas no banco existem e batem com as entidades
spring.jpa.hibernate.ddl-auto=validate

#Evita erros com campos grandes (LOB) no PostgreSQL
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# O Hibernate mant\u00E9m a conex\u00E3o com o banco aberta at\u00E9 o final da renderiza\u00E7\u00E3o da view (mesmo que n\u00E3o seja necess\u00E1ria).
# Isso pode esconder erros de modelagem, como LazyInitializationException, s\u00F3 aparecendo depois em produ\u00E7\u00E3o.
# Desativa Open-in-View
spring.jpa.open-in-view=false

# Swagger
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs